[2021-03-02T20:36:36.906] [DEBUG] members - getMembersList
[2021-03-02T20:36:37.421] [DEBUG] members - register
[2021-03-02T20:36:37.471] [DEBUG] members - inquiry
[2021-03-02T20:36:37.702] [DEBUG] members - getMembersList
[2021-03-02T20:36:37.926] [DEBUG] members - unregister
[2021-03-02T20:36:37.968] [DEBUG] members - getMembersList
[2021-03-02T20:36:58.467] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-02T20:38:18.048] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T15:54:52.108] [DEBUG] members - inquiry
[2021-03-03T16:13:51.018] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T16:13:51.284] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T16:14:08.083] [DEBUG] members - getMembersList
[2021-03-03T16:14:39.911] [DEBUG] members - inquiry
[2021-03-03T16:14:39.914] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:12:17.670] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:12:31.039] [DEBUG] members - inquiry
[2021-03-03T17:13:50.897] [DEBUG] members - inquiry
[2021-03-03T17:15:44.939] [DEBUG] members - inquiry
[2021-03-03T17:16:18.339] [DEBUG] members - inquiry
[2021-03-03T17:16:22.775] [DEBUG] members - inquiry
[2021-03-03T17:16:31.575] [DEBUG] members - inquiry
[2021-03-03T17:17:04.388] [DEBUG] members - inquiry
[2021-03-03T17:52:14.643] [DEBUG] members - getMembersList
[2021-03-03T17:52:24.752] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:53:32.226] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:54:12.870] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:56:07.055] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:56:29.606] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:56:31.991] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:57:14.696] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:57:17.307] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:57:51.502] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:57:59.026] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:58:03.312] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:59:15.421] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:59:47.255] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:59:48.258] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:59:48.494] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:59:48.717] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:59:48.910] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T17:59:53.507] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T18:00:54.266] [DEBUG] members - getMembersList
[2021-03-03T18:01:05.426] [DEBUG] members - getMembersList
[2021-03-03T18:01:45.326] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T18:02:03.700] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T18:02:08.770] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T18:02:12.170] [DEBUG] members - getMembersList
[2021-03-03T18:02:16.291] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T18:02:22.065] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T18:03:01.388] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T18:03:25.797] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T18:03:28.110] [DEBUG] members - getMembersList
[2021-03-03T18:08:57.998] [DEBUG] members - getMembersList
[2021-03-03T18:10:16.101] [DEBUG] members - getMembersList
[2021-03-03T18:10:39.284] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T18:10:59.000] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T18:12:15.939] [DEBUG] members - getMembersList
[2021-03-03T18:12:31.025] [ERROR] app - SyntaxError: Unexpected token / in JSON at position 0
    at JSON.parse (<anonymous>)
    at createStrictSyntaxError (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\body-parser\lib\types\json.js:158:10)
    at parse (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\body-parser\lib\types\json.js:83:15)
    at C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\body-parser\lib\read.js:121:18
    at invokeCallback (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\raw-body\index.js:224:16)
    at done (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\raw-body\index.js:213:7)
    at IncomingMessage.onEnd (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\raw-body\index.js:273:7)
    at IncomingMessage.emit (events.js:333:22)
    at endReadableNT (_stream_readable.js:1204:12)
    at processTicksAndRejections (internal/process/task_queues.js:84:21) {
  expose: true,
  statusCode: 400,
  status: 400,
  body: '// {\n// \t"email": "lim@mail.com"\n// }',
  type: 'entity.parse.failed'
}
[2021-03-03T18:13:43.834] [DEBUG] members - getMembersList
[2021-03-03T18:13:43.837] [ERROR] app - Response {
  code: 0,
  message: 'Invalid email',
  value: Result {
    formatter: [Function: formatter],
    errors: [ [Object] ],
    status: 400
  }
}
[2021-03-03T18:28:45.158] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T18:29:05.688] [DEBUG] members - getMembersList
[2021-03-03T18:29:05.691] [ERROR] app - Response {
  code: 0,
  message: 'Invalid email',
  value: Result {
    formatter: [Function: formatter],
    errors: [ [Object] ],
    status: 400
  }
}
[2021-03-03T18:43:48.172] [DEBUG] members - getMembersList
[2021-03-03T18:43:48.178] [ERROR] app - Response {
  code: 0,
  message: 'Invalid password',
  value: Result {
    formatter: [Function: formatter],
    errors: [ [Object] ],
    status: 400
  }
}
[2021-03-03T18:43:57.927] [DEBUG] members - getMembersList
[2021-03-03T18:44:38.046] [DEBUG] members - getMembersList
[2021-03-03T18:44:38.047] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-03T18:45:06.324] [DEBUG] members - getMembersList
[2021-03-03T20:16:48.217] [DEBUG] members - getMembersList
[2021-03-03T20:18:56.962] [DEBUG] members - getMembersList
[2021-03-03T20:18:57.175] [ERROR] app - Response {
  code: 0,
  message: 'Invalid email',
  value: Result {
    formatter: [Function: formatter],
    errors: [ [Object] ],
    status: 400
  }
}
[2021-03-03T20:26:28.778] [DEBUG] members - getMembersList
[2021-03-03T20:26:44.098] [DEBUG] members - getMembersList
[2021-03-03T20:26:47.574] [DEBUG] members - getMembersList
[2021-03-03T20:27:21.304] [DEBUG] members - getMembersList
[2021-03-03T20:27:29.798] [DEBUG] members - getMembersList
[2021-03-03T20:27:35.851] [DEBUG] members - getMembersList
[2021-03-03T20:32:22.732] [DEBUG] members - getMembersList
[2021-03-03T20:32:56.893] [DEBUG] members - getMembersList
[2021-03-03T20:33:10.563] [DEBUG] members - getMembersList
[2021-03-03T20:46:22.811] [DEBUG] members - getMembersList
[2021-03-03T20:48:54.204] [DEBUG] members - getMembersList
[2021-03-03T20:49:03.458] [DEBUG] members - getMembersList
[2021-03-03T20:50:14.963] [DEBUG] members - getMembersList
[2021-03-03T21:13:17.868] [DEBUG] members - getMembersList
[2021-03-03T21:13:23.587] [DEBUG] members - getMembersList
[2021-03-03T21:13:31.984] [DEBUG] members - getMembersList
[2021-03-03T21:31:28.946] [DEBUG] members - getMembersList
[2021-03-03T21:31:29.325] [DEBUG] members - getMembersList
[2021-03-03T21:31:29.360] [DEBUG] members - getMembersList
[2021-03-05T15:38:50.544] [DEBUG] members - getMembersList
[2021-03-05T15:38:58.999] [DEBUG] members - getMembersList
[2021-03-05T15:39:39.383] [DEBUG] members - getMembersList
[2021-03-05T15:42:29.840] [DEBUG] members - getMembersList
[2021-03-05T15:43:15.229] [DEBUG] members - getMembersList
[2021-03-05T15:44:43.577] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-05T15:48:33.123] [ERROR] app - Response { code: 0, message: 'Not Found!', value: null, status: 404 }
[2021-03-05T15:49:13.360] [DEBUG] members - getMembersList
[2021-03-05T15:50:40.465] [DEBUG] members - getMembersList
[2021-03-05T15:50:53.691] [DEBUG] members - getMembersList
[2021-03-05T16:32:51.469] [DEBUG] members - getMembersList
[2021-03-05T16:34:50.996] [DEBUG] members - getMembersList
[2021-03-05T16:40:21.692] [DEBUG] members - getMembersList
[2021-03-05T16:40:40.470] [DEBUG] members - getMembersList
[2021-03-05T16:41:30.853] [DEBUG] members - getMembersList
[2021-03-05T16:42:35.018] [DEBUG] members - getMembersList
[2021-03-05T16:42:38.288] [DEBUG] members - getMembersList
[2021-03-05T16:43:42.367] [DEBUG] members - getMembersList
[2021-03-05T16:44:11.274] [DEBUG] members - getMembersList
[2021-03-05T16:45:33.842] [DEBUG] members - getMembersList
[2021-03-05T16:45:53.572] [DEBUG] members - getMembersList
[2021-03-05T16:46:00.747] [DEBUG] members - getMembersList
[2021-03-05T17:21:30.626] [DEBUG] members - getMembersList
[2021-03-05T17:22:24.198] [DEBUG] members - getMembersList
[2021-03-05T17:22:28.781] [DEBUG] members - getMembersList
[2021-03-05T17:23:05.094] [DEBUG] members - getMembersList
[2021-03-05T17:23:21.161] [DEBUG] members - getMembersList
[2021-03-05T17:23:33.484] [DEBUG] members - getMembersList
[2021-03-05T17:24:58.109] [DEBUG] members - getMembersList
[2021-03-05T17:26:42.530] [DEBUG] members - getMembersList
[2021-03-05T17:31:02.008] [DEBUG] members - getMembersList
[2021-03-09T16:31:31.168] [DEBUG] members - getMembersList
[2021-03-09T16:31:31.367] [DEBUG] members - getMembersList
[2021-03-09T16:31:31.395] [DEBUG] members - getMembersList
[2021-03-16T14:10:26.179] [INFO] app - Example app listening on port 3000!
[2021-03-16T14:40:16.031] [INFO] app - Example app listening on port 3000!
[2021-03-16T14:40:25.930] [DEBUG] members - getMembersList
[2021-03-16T14:40:27.986] [ERROR] app - Response {
  code: 1,
  message: 'DB Error!',
  value: Error: connect ECONNREFUSED 127.0.0.1:3306
      at PromisePool.query (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\mysql2\promise.js:340:22)
      at getEmailInfo (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:11:25)
      at exports.inquiry (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:46:24)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at exports.email (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\validator.js:16:13)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at middleware (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express-validator\src\middlewares\check.js:16:13)
      at processTicksAndRejections (internal/process/task_queues.js:97:5) {
    message: 'connect ECONNREFUSED 127.0.0.1:3306',
    code: 'ECONNREFUSED',
    errno: 'ECONNREFUSED',
    sqlState: undefined,
    sqlMessage: undefined
  }
}
[2021-03-16T14:40:28.137] [DEBUG] members - getMembersList
[2021-03-16T14:40:30.154] [ERROR] app - Response {
  code: 1,
  message: 'DB Error!',
  value: Error: connect ECONNREFUSED 127.0.0.1:3306
      at PromisePool.query (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\mysql2\promise.js:340:22)
      at getEmailInfo (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:13:25)
      at exports.register (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:24:24)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at exports.password (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\validator.js:38:13)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at middleware (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express-validator\src\middlewares\check.js:16:13)
      at processTicksAndRejections (internal/process/task_queues.js:97:5) {
    message: 'connect ECONNREFUSED 127.0.0.1:3306',
    code: 'ECONNREFUSED',
    errno: 'ECONNREFUSED',
    sqlState: undefined,
    sqlMessage: undefined
  }
}
[2021-03-16T14:40:30.164] [DEBUG] members - getMembersList
[2021-03-16T14:40:32.176] [ERROR] app - Response {
  code: 1,
  message: 'DB Error!',
  value: Error: connect ECONNREFUSED 127.0.0.1:3306
      at PromisePool.query (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\mysql2\promise.js:340:22)
      at getEmailInfo (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:11:25)
      at exports.inquiry (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:46:24)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at exports.email (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\validator.js:16:13)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at middleware (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express-validator\src\middlewares\check.js:16:13)
      at processTicksAndRejections (internal/process/task_queues.js:97:5) {
    message: 'connect ECONNREFUSED 127.0.0.1:3306',
    code: 'ECONNREFUSED',
    errno: 'ECONNREFUSED',
    sqlState: undefined,
    sqlMessage: undefined
  }
}
[2021-03-16T14:41:25.474] [DEBUG] members - getMembersList
[2021-03-16T14:41:25.687] [DEBUG] members - getMembersList
[2021-03-16T14:41:25.712] [DEBUG] members - getMembersList
[2021-03-16T14:44:16.189] [DEBUG] members - getMembersList
[2021-03-16T14:45:04.705] [DEBUG] members - getMembersList
[2021-03-16T14:45:24.362] [DEBUG] members - getMembersList
[2021-03-16T14:45:26.375] [ERROR] app - Response {
  code: 1,
  message: 'DB Error!',
  value: Error: connect ECONNREFUSED 127.0.0.1:3306
      at PromisePool.query (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\mysql2\promise.js:340:22)
      at getEmailInfo (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:13:25)
      at exports.inquiry (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:46:24)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at exports.email (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\validator.js:22:13)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at middleware (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express-validator\src\middlewares\check.js:16:13)
      at processTicksAndRejections (internal/process/task_queues.js:97:5) {
    message: 'connect ECONNREFUSED 127.0.0.1:3306',
    code: 'ECONNREFUSED',
    errno: 'ECONNREFUSED',
    sqlState: undefined,
    sqlMessage: undefined
  }
}
[2021-03-16T15:29:50.277] [INFO] app - Example app listening on port 3000!
[2021-03-16T15:57:25.378] [DEBUG] members - getMembersList
[2021-03-16T15:57:25.388] [DEBUG] validator - View all members!
[2021-03-16T15:57:27.437] [ERROR] app - Response {
  code: 1,
  message: 'DB Error!',
  value: Error: connect ECONNREFUSED 127.0.0.1:3306
      at PromisePool.query (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\mysql2\promise.js:340:22)
      at getEmailInfo (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:11:25)
      at exports.inquiry (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:46:24)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at exports.email (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\validator.js:14:7)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at middleware (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express-validator\src\middlewares\check.js:16:13)
      at processTicksAndRejections (internal/process/task_queues.js:97:5) {
    message: 'connect ECONNREFUSED 127.0.0.1:3306',
    code: 'ECONNREFUSED',
    errno: 'ECONNREFUSED',
    sqlState: undefined,
    sqlMessage: undefined
  }
}
[2021-03-16T15:58:06.229] [DEBUG] members - getMembersList
[2021-03-16T15:58:06.230] [DEBUG] validator - View all members!
[2021-03-16T15:58:08.234] [ERROR] app - Response {
  code: 1,
  message: 'DB Error!',
  value: Error: connect ECONNREFUSED 127.0.0.1:3306
      at PromisePool.query (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\mysql2\promise.js:340:22)
      at getEmailInfo (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:11:25)
      at exports.inquiry (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:46:24)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at exports.email (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\validator.js:14:7)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at middleware (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express-validator\src\middlewares\check.js:16:13)
      at processTicksAndRejections (internal/process/task_queues.js:97:5) {
    message: 'connect ECONNREFUSED 127.0.0.1:3306',
    code: 'ECONNREFUSED',
    errno: 'ECONNREFUSED',
    sqlState: undefined,
    sqlMessage: undefined
  }
}
[2021-03-16T15:58:20.584] [DEBUG] members - getMembersList
[2021-03-16T15:58:20.586] [DEBUG] validator - View all members!
[2021-03-16T15:58:22.589] [ERROR] app - Response {
  code: 1,
  message: 'DB Error!',
  value: Error: connect ECONNREFUSED 127.0.0.1:3306
      at PromisePool.query (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\mysql2\promise.js:340:22)
      at getEmailInfo (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:11:25)
      at exports.inquiry (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:46:24)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at exports.email (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\validator.js:14:7)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at middleware (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express-validator\src\middlewares\check.js:16:13)
      at processTicksAndRejections (internal/process/task_queues.js:97:5) {
    message: 'connect ECONNREFUSED 127.0.0.1:3306',
    code: 'ECONNREFUSED',
    errno: 'ECONNREFUSED',
    sqlState: undefined,
    sqlMessage: undefined
  }
}
[2021-03-16T15:59:08.641] [DEBUG] members - getMembersList
[2021-03-16T15:59:08.642] [DEBUG] validator - View all members!
[2021-03-16T15:59:10.646] [ERROR] app - Response {
  code: 1,
  message: 'DB Error!',
  value: Error: connect ECONNREFUSED 127.0.0.1:3306
      at PromisePool.query (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\mysql2\promise.js:340:22)
      at getEmailInfo (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:11:25)
      at exports.inquiry (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:46:24)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at exports.email (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\validator.js:14:7)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at middleware (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express-validator\src\middlewares\check.js:16:13)
      at processTicksAndRejections (internal/process/task_queues.js:97:5) {
    message: 'connect ECONNREFUSED 127.0.0.1:3306',
    code: 'ECONNREFUSED',
    errno: 'ECONNREFUSED',
    sqlState: undefined,
    sqlMessage: undefined
  }
}
[2021-03-16T15:59:17.506] [DEBUG] members - getMembersList
[2021-03-16T15:59:17.508] [DEBUG] validator - View all members!
[2021-03-16T15:59:19.512] [ERROR] app - Response {
  code: 1,
  message: 'DB Error!',
  value: Error: connect ECONNREFUSED 127.0.0.1:3306
      at PromisePool.query (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\mysql2\promise.js:340:22)
      at getEmailInfo (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:11:25)
      at exports.inquiry (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\membersController.js:46:24)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at exports.email (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\controller\validator.js:14:7)
      at Layer.handle [as handle_request] (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express\lib\router\route.js:137:13)
      at middleware (C:\Users\세컨드\Desktop\study\Node.JS\새 폴더\Node.js\members\node_modules\express-validator\src\middlewares\check.js:16:13)
      at processTicksAndRejections (internal/process/task_queues.js:97:5) {
    message: 'connect ECONNREFUSED 127.0.0.1:3306',
    code: 'ECONNREFUSED',
    errno: 'ECONNREFUSED',
    sqlState: undefined,
    sqlMessage: undefined
  }
}
[2021-03-16T15:59:53.864] [DEBUG] members - getMembersList
[2021-03-16T15:59:53.865] [DEBUG] validator - View all members!
[2021-03-16T16:02:56.380] [DEBUG] members - getMembersList
[2021-03-16T16:02:56.385] [DEBUG] validator - Email validation complete!
[2021-03-16T16:02:56.387] [DEBUG] members - getMembersList
[2021-03-16T16:02:56.388] [DEBUG] validator - View all members!
[2021-03-16T16:04:13.804] [DEBUG] members - getMembersList
[2021-03-16T16:04:13.805] [DEBUG] validator - View all members!
[2021-03-16T16:04:13.806] [DEBUG] members - getMembersList
[2021-03-16T16:04:13.807] [DEBUG] validator - Email validation complete!
[2021-03-16T16:09:01.383] [DEBUG] members - getMembersList
[2021-03-16T16:09:01.384] [DEBUG] validator - Email validation complete!
[2021-03-16T16:09:01.387] [DEBUG] members - getMembersList
[2021-03-16T16:09:01.388] [DEBUG] validator - Email validation complete!
[2021-03-16T16:09:01.390] [DEBUG] validator - Password validation complete!
[2021-03-16T16:09:01.392] [DEBUG] members - getMembersList
[2021-03-16T16:09:01.393] [DEBUG] validator - View all members!
[2021-03-16T16:09:01.395] [DEBUG] members - getMembersList
[2021-03-16T16:09:01.396] [DEBUG] validator - Email validation complete!
[2021-03-16T16:28:17.637] [DEBUG] members - getMembersList
[2021-03-16T16:28:17.638] [DEBUG] validator - View all members!
[2021-03-16T16:30:52.540] [DEBUG] members - getMembersList
[2021-03-16T16:30:52.541] [DEBUG] validator - View all members!
[2021-03-16T16:30:52.543] [DEBUG] members - getMembersList
[2021-03-16T16:30:52.543] [DEBUG] validator - Email validation complete!
[2021-03-16T16:30:52.543] [DEBUG] validator - Password validation complete!
[2021-03-16T16:32:24.949] [DEBUG] members - getMembersList
[2021-03-16T16:32:24.950] [DEBUG] validator - View all members!
[2021-03-16T16:32:24.951] [DEBUG] members - getMembersList
[2021-03-16T16:32:24.951] [DEBUG] validator - Email validation complete!
[2021-03-16T16:32:24.952] [DEBUG] validator - Password validation complete!
[2021-03-16T16:32:33.136] [DEBUG] members - getMembersList
[2021-03-16T16:32:33.137] [DEBUG] validator - View all members!
[2021-03-16T16:32:33.138] [DEBUG] members - getMembersList
[2021-03-16T16:32:33.138] [DEBUG] validator - Email validation complete!
[2021-03-16T16:32:33.138] [DEBUG] validator - Password validation complete!
[2021-03-16T16:35:22.335] [DEBUG] members - getMembersList
[2021-03-16T16:35:22.336] [DEBUG] validator - Email validation complete!
[2021-03-16T16:35:22.336] [DEBUG] validator - Password validation complete!
[2021-03-16T16:35:22.337] [DEBUG] members - getMembersList
[2021-03-16T16:35:22.337] [DEBUG] validator - View all members!
[2021-03-16T16:36:08.843] [DEBUG] members - getMembersList
[2021-03-16T16:36:08.844] [DEBUG] validator - Email validation complete!
[2021-03-16T16:36:08.844] [DEBUG] validator - Password validation complete!
[2021-03-16T16:36:08.846] [DEBUG] members - getMembersList
[2021-03-16T16:36:08.847] [DEBUG] validator - Email validation complete!
[2021-03-16T16:36:32.514] [DEBUG] members - getMembersList
[2021-03-16T16:36:32.515] [DEBUG] validator - View all members!
[2021-03-16T16:36:32.516] [DEBUG] members - getMembersList
[2021-03-16T16:36:32.517] [DEBUG] validator - Email validation complete!
[2021-03-16T16:36:32.517] [DEBUG] validator - Password validation complete!
[2021-03-16T16:37:13.972] [DEBUG] members - getMembersList
[2021-03-16T16:37:13.972] [DEBUG] validator - Email validation complete!
[2021-03-16T16:37:13.973] [DEBUG] validator - Password validation complete!
[2021-03-16T16:37:13.974] [DEBUG] members - getMembersList
[2021-03-16T16:37:13.974] [DEBUG] validator - View all members!
[2021-03-16T16:37:26.763] [DEBUG] members - getMembersList
[2021-03-16T16:37:26.764] [DEBUG] validator - View all members!
[2021-03-16T16:37:26.766] [DEBUG] members - getMembersList
[2021-03-16T16:37:26.768] [DEBUG] validator - Email validation complete!
[2021-03-16T16:37:26.769] [DEBUG] validator - Password validation complete!
[2021-03-16T16:37:48.776] [DEBUG] members - getMembersList
[2021-03-16T16:37:48.777] [DEBUG] validator - View all members!
[2021-03-16T16:37:48.779] [DEBUG] members - getMembersList
[2021-03-16T16:37:48.780] [DEBUG] validator - Email validation complete!
[2021-03-16T16:37:48.780] [DEBUG] validator - Password validation complete!
[2021-03-16T16:40:28.433] [DEBUG] members - getMembersList
[2021-03-16T16:40:28.434] [DEBUG] validator - View all members!
[2021-03-16T16:40:28.477] [DEBUG] members - getMembersList
[2021-03-16T16:40:28.478] [DEBUG] validator - Email validation complete!
[2021-03-16T16:40:28.479] [DEBUG] validator - Password validation complete!
[2021-03-16T16:42:01.041] [DEBUG] members - getMembersList
[2021-03-16T16:42:01.042] [DEBUG] validator - View all members!
[2021-03-16T16:42:01.084] [DEBUG] members - getMembersList
[2021-03-16T16:42:01.085] [DEBUG] validator - Email validation complete!
[2021-03-16T16:42:01.089] [DEBUG] validator - Password validation complete!
[2021-03-16T16:42:01.100] [DEBUG] members - getMembersList
[2021-03-16T16:42:01.101] [DEBUG] validator - Email validation complete!
[2021-03-16T16:43:02.077] [DEBUG] members - getMembersList
[2021-03-16T16:43:02.077] [DEBUG] validator - View all members!
[2021-03-16T16:43:02.122] [DEBUG] members - getMembersList
[2021-03-16T16:43:02.123] [DEBUG] validator - Email validation complete!
[2021-03-16T16:43:02.124] [DEBUG] validator - Password validation complete!
[2021-03-16T16:43:02.136] [DEBUG] members - getMembersList
[2021-03-16T16:43:02.138] [DEBUG] validator - Email validation complete!
[2021-03-16T16:43:02.150] [DEBUG] members - getMembersList
[2021-03-16T16:43:02.151] [DEBUG] validator - Email validation complete!
[2021-03-16T16:46:11.925] [INFO] app - Example app listening on port 3000!
[2021-03-16T16:46:24.649] [DEBUG] members - getMembersList
[2021-03-16T16:46:24.657] [DEBUG] validator - View all members!
[2021-03-16T16:46:24.825] [DEBUG] members - getMembersList
[2021-03-16T16:46:24.833] [DEBUG] validator - Email validation complete!
[2021-03-16T16:46:24.834] [DEBUG] validator - Password validation complete!
[2021-03-16T16:46:24.855] [DEBUG] members - getMembersList
[2021-03-16T16:46:24.857] [DEBUG] validator - Email validation complete!
[2021-03-16T16:46:24.869] [DEBUG] members - getMembersList
[2021-03-16T16:46:24.870] [DEBUG] validator - Email validation complete!
[2021-03-16T16:49:21.193] [INFO] app - Example app listening on port 3000!
[2021-03-16T16:49:44.306] [DEBUG] members - getMembersList
[2021-03-16T16:49:44.314] [DEBUG] validator - View all members!
[2021-03-16T16:49:44.506] [DEBUG] members - getMembersList
[2021-03-16T16:49:44.515] [DEBUG] validator - Email validation complete!
[2021-03-16T16:49:44.518] [DEBUG] validator - Password validation complete!
[2021-03-16T16:49:44.538] [DEBUG] members - getMembersList
[2021-03-16T16:49:44.539] [DEBUG] validator - Email validation complete!
[2021-03-16T16:49:44.559] [DEBUG] members - getMembersList
[2021-03-16T16:49:44.561] [DEBUG] validator - Email validation complete!
[2021-03-16T16:52:22.907] [INFO] app - Example app listening on port 3000!
[2021-03-16T16:53:10.560] [INFO] app - Example app listening on port 3000!
[2021-03-16T16:53:14.372] [DEBUG] members - getMembersList
[2021-03-16T16:53:14.380] [DEBUG] validator - View all members!
[2021-03-16T16:53:14.538] [DEBUG] members - getMembersList
[2021-03-16T16:53:14.544] [DEBUG] validator - Email validation complete!
[2021-03-16T16:53:14.546] [DEBUG] validator - Password validation complete!
[2021-03-16T16:53:14.567] [DEBUG] members - getMembersList
[2021-03-16T16:53:14.568] [DEBUG] validator - Email validation complete!
[2021-03-16T16:53:14.578] [DEBUG] members - getMembersList
[2021-03-16T16:53:14.579] [DEBUG] validator - Email validation complete!
[2021-03-16T18:06:25.198] [INFO] app - Example app listening on port 3000!
[2021-03-16T18:06:39.674] [DEBUG] members - getMembersList
[2021-03-16T18:06:39.683] [DEBUG] validator - View all members!
[2021-03-16T18:06:41.729] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: 'connect ECONNREFUSED 127.0.0.1:3306',
    code: 'ECONNREFUSED',
    errno: 'ECONNREFUSED'
  }
}
[2021-03-16T18:06:41.991] [DEBUG] members - getMembersList
[2021-03-16T18:06:41.999] [DEBUG] validator - Email validation complete!
[2021-03-16T18:06:42.001] [DEBUG] validator - Password validation complete!
[2021-03-16T18:06:44.007] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: 'connect ECONNREFUSED 127.0.0.1:3306',
    code: 'ECONNREFUSED',
    errno: 'ECONNREFUSED'
  }
}
[2021-03-16T18:06:44.119] [DEBUG] members - getMembersList
[2021-03-16T18:06:44.121] [DEBUG] validator - Email validation complete!
[2021-03-16T18:06:46.125] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: 'connect ECONNREFUSED 127.0.0.1:3306',
    code: 'ECONNREFUSED',
    errno: 'ECONNREFUSED'
  }
}
[2021-03-16T18:06:46.243] [DEBUG] members - getMembersList
[2021-03-16T18:06:46.244] [DEBUG] validator - Email validation complete!
[2021-03-16T18:06:48.257] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: 'connect ECONNREFUSED 127.0.0.1:3306',
    code: 'ECONNREFUSED',
    errno: 'ECONNREFUSED'
  }
}
[2021-03-16T18:11:15.681] [DEBUG] members - getMembersList
[2021-03-16T18:11:15.682] [DEBUG] validator - View all members!
[2021-03-16T18:11:15.856] [DEBUG] members - getMembersList
[2021-03-16T18:11:15.860] [DEBUG] validator - Email validation complete!
[2021-03-16T18:11:15.861] [DEBUG] validator - Password validation complete!
[2021-03-16T18:11:15.893] [DEBUG] members - getMembersList
[2021-03-16T18:11:15.895] [DEBUG] validator - Email validation complete!
[2021-03-16T18:11:15.909] [DEBUG] members - getMembersList
[2021-03-16T18:11:15.910] [DEBUG] validator - Email validation complete!
[2021-03-16T18:12:45.050] [INFO] app - Example app listening on port 3000!
[2021-03-16T18:13:25.111] [INFO] app - Example app listening on port 3000!
[2021-03-16T18:17:50.049] [INFO] app - Example app listening on port 3000!
[2021-03-16T18:17:50.215] [INFO] app - Example app listening on port 3000!
[2021-03-16T18:17:50.352] [INFO] app - Example app listening on port 3000!
[2021-03-16T18:17:50.424] [INFO] app - Example app listening on port 3000!
[2021-03-16T18:18:35.697] [INFO] app - Example app listening on port 3000!
[2021-03-16T18:18:35.697] [INFO] app - Example app listening on port 3000!
[2021-03-16T18:18:35.744] [INFO] app - Example app listening on port 3000!
[2021-03-16T18:18:35.792] [INFO] app - Example app listening on port 3000!
[2021-03-19T19:00:52.019] [INFO] app - Example app listening on port 3000!
[2021-03-19T19:01:23.917] [DEBUG] members - getMembersList
[2021-03-19T19:01:23.922] [DEBUG] validator - View all members!
[2021-03-19T19:01:23.947] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: "Access denied for user ''@'localhost' (using password: YES)",
    code: 'ER_ACCESS_DENIED_ERROR',
    errno: 1045,
    sqlState: '28000',
    sqlMessage: "Access denied for user ''@'localhost' (using password: YES)"
  }
}
[2021-03-19T19:01:23.971] [DEBUG] members - getMembersList
[2021-03-19T19:01:23.974] [DEBUG] validator - Email validation complete!
[2021-03-19T19:01:23.975] [DEBUG] validator - Password validation complete!
[2021-03-19T19:01:23.979] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: "Access denied for user ''@'localhost' (using password: YES)",
    code: 'ER_ACCESS_DENIED_ERROR',
    errno: 1045,
    sqlState: '28000',
    sqlMessage: "Access denied for user ''@'localhost' (using password: YES)"
  }
}
[2021-03-19T19:01:23.987] [DEBUG] members - getMembersList
[2021-03-19T19:01:23.990] [DEBUG] validator - Email validation complete!
[2021-03-19T19:01:23.994] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: "Access denied for user ''@'localhost' (using password: YES)",
    code: 'ER_ACCESS_DENIED_ERROR',
    errno: 1045,
    sqlState: '28000',
    sqlMessage: "Access denied for user ''@'localhost' (using password: YES)"
  }
}
[2021-03-19T19:01:23.999] [DEBUG] members - getMembersList
[2021-03-19T19:01:23.999] [DEBUG] validator - Email validation complete!
[2021-03-19T19:01:24.004] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: "Access denied for user ''@'localhost' (using password: YES)",
    code: 'ER_ACCESS_DENIED_ERROR',
    errno: 1045,
    sqlState: '28000',
    sqlMessage: "Access denied for user ''@'localhost' (using password: YES)"
  }
}
[2021-03-22T17:05:27.897] [INFO] app - Example app listening on port 3000!
[2021-03-22T17:05:37.334] [DEBUG] members - getMembersList
[2021-03-22T17:05:37.338] [DEBUG] validator - View all members!
[2021-03-22T17:05:37.371] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: "Access denied for user ''@'localhost' (using password: NO)",
    code: 'ER_ACCESS_DENIED_ERROR',
    errno: 1045,
    sqlState: '28000',
    sqlMessage: "Access denied for user ''@'localhost' (using password: NO)"
  }
}
[2021-03-22T17:05:37.397] [DEBUG] members - getMembersList
[2021-03-22T17:05:37.401] [DEBUG] validator - Email validation complete!
[2021-03-22T17:05:37.402] [DEBUG] validator - Password validation complete!
[2021-03-22T17:05:37.404] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: "Access denied for user ''@'localhost' (using password: NO)",
    code: 'ER_ACCESS_DENIED_ERROR',
    errno: 1045,
    sqlState: '28000',
    sqlMessage: "Access denied for user ''@'localhost' (using password: NO)"
  }
}
[2021-03-22T17:05:37.411] [DEBUG] members - getMembersList
[2021-03-22T17:05:37.415] [DEBUG] validator - Email validation complete!
[2021-03-22T17:05:37.417] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: "Access denied for user ''@'localhost' (using password: NO)",
    code: 'ER_ACCESS_DENIED_ERROR',
    errno: 1045,
    sqlState: '28000',
    sqlMessage: "Access denied for user ''@'localhost' (using password: NO)"
  }
}
[2021-03-22T17:05:37.423] [DEBUG] members - getMembersList
[2021-03-22T17:05:37.424] [DEBUG] validator - Email validation complete!
[2021-03-22T17:05:37.426] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: "Access denied for user ''@'localhost' (using password: NO)",
    code: 'ER_ACCESS_DENIED_ERROR',
    errno: 1045,
    sqlState: '28000',
    sqlMessage: "Access denied for user ''@'localhost' (using password: NO)"
  }
}
[2021-03-22T17:06:42.896] [DEBUG] members - getMembersList
[2021-03-22T17:06:42.897] [DEBUG] validator - View all members!
[2021-03-22T17:06:42.899] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: "Access denied for user ''@'localhost' (using password: NO)",
    code: 'ER_ACCESS_DENIED_ERROR',
    errno: 1045,
    sqlState: '28000',
    sqlMessage: "Access denied for user ''@'localhost' (using password: NO)"
  }
}
[2021-03-22T17:06:42.916] [DEBUG] members - getMembersList
[2021-03-22T17:06:42.916] [DEBUG] validator - Email validation complete!
[2021-03-22T17:06:42.917] [DEBUG] validator - Password validation complete!
[2021-03-22T17:06:42.919] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: "Access denied for user ''@'localhost' (using password: NO)",
    code: 'ER_ACCESS_DENIED_ERROR',
    errno: 1045,
    sqlState: '28000',
    sqlMessage: "Access denied for user ''@'localhost' (using password: NO)"
  }
}
[2021-03-22T17:06:42.924] [DEBUG] members - getMembersList
[2021-03-22T17:06:42.925] [DEBUG] validator - Email validation complete!
[2021-03-22T17:06:42.927] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: "Access denied for user ''@'localhost' (using password: NO)",
    code: 'ER_ACCESS_DENIED_ERROR',
    errno: 1045,
    sqlState: '28000',
    sqlMessage: "Access denied for user ''@'localhost' (using password: NO)"
  }
}
[2021-03-22T17:06:42.932] [DEBUG] members - getMembersList
[2021-03-22T17:06:42.933] [DEBUG] validator - Email validation complete!
[2021-03-22T17:06:42.935] [ERROR] app - {
  code: 1,
  message: 'DB Error!',
  value: {
    message: "Access denied for user ''@'localhost' (using password: NO)",
    code: 'ER_ACCESS_DENIED_ERROR',
    errno: 1045,
    sqlState: '28000',
    sqlMessage: "Access denied for user ''@'localhost' (using password: NO)"
  }
}
[2021-03-22T17:10:37.974] [INFO] app - Example app listening on port 3000!
[2021-03-22T17:10:39.719] [DEBUG] members - getMembersList
[2021-03-22T17:10:39.724] [DEBUG] validator - View all members!
[2021-03-22T17:10:39.771] [DEBUG] members - getMembersList
[2021-03-22T17:10:39.775] [DEBUG] validator - Email validation complete!
[2021-03-22T17:10:39.776] [DEBUG] validator - Password validation complete!
[2021-03-22T17:10:39.782] [DEBUG] members - getMembersList
[2021-03-22T17:10:39.785] [DEBUG] validator - Email validation complete!
[2021-03-22T17:10:39.788] [DEBUG] members - getMembersList
[2021-03-22T17:10:39.789] [DEBUG] validator - Email validation complete!
[2021-03-22T17:11:58.720] [DEBUG] members - getMembersList
[2021-03-22T17:11:58.721] [DEBUG] validator - View all members!
[2021-03-22T17:11:58.732] [DEBUG] members - getMembersList
[2021-03-22T17:11:58.736] [DEBUG] validator - Email validation complete!
[2021-03-22T17:11:58.736] [DEBUG] validator - Password validation complete!
[2021-03-22T17:11:58.742] [DEBUG] members - getMembersList
[2021-03-22T17:11:58.743] [DEBUG] validator - Email validation complete!
[2021-03-22T17:12:24.097] [DEBUG] members - getMembersList
[2021-03-22T17:12:24.097] [DEBUG] validator - View all members!
[2021-03-22T17:12:24.109] [DEBUG] members - getMembersList
[2021-03-22T17:12:24.109] [DEBUG] validator - Email validation complete!
[2021-03-22T17:12:24.109] [DEBUG] validator - Password validation complete!
[2021-03-22T17:12:24.113] [DEBUG] members - getMembersList
[2021-03-22T17:12:24.114] [DEBUG] validator - Email validation complete!
[2021-03-22T17:12:24.117] [DEBUG] members - getMembersList
[2021-03-22T17:12:24.118] [DEBUG] validator - Email validation complete!
[2021-03-22T17:13:46.855] [DEBUG] members - getMembersList
[2021-03-22T17:13:46.855] [DEBUG] validator - View all members!
[2021-03-22T17:14:34.554] [DEBUG] members - getMembersList
[2021-03-22T17:14:34.555] [DEBUG] validator - Email validation complete!
[2021-03-22T17:14:34.555] [DEBUG] validator - Password validation complete!
[2021-03-22T17:14:45.308] [DEBUG] members - getMembersList
[2021-03-22T17:14:45.309] [DEBUG] validator - Email validation complete!
[2021-03-22T17:14:45.309] [DEBUG] validator - Password validation complete!
[2021-03-22T17:15:00.642] [DEBUG] members - getMembersList
[2021-03-22T17:15:00.643] [ERROR] app - {
  code: 0,
  message: 'Invalid email',
  value: { errors: [ [Object] ], status: 400 }
}
[2021-03-22T17:15:07.875] [DEBUG] members - getMembersList
[2021-03-22T17:15:07.876] [DEBUG] validator - Email validation complete!
[2021-03-22T17:15:07.876] [DEBUG] validator - Password validation complete!
[2021-03-22T17:15:20.612] [DEBUG] members - getMembersList
[2021-03-22T17:15:20.612] [DEBUG] validator - Email validation complete!
[2021-03-22T17:15:20.612] [DEBUG] validator - Password validation complete!
[2021-03-22T17:15:29.838] [DEBUG] members - getMembersList
[2021-03-22T17:15:29.838] [DEBUG] validator - View all members!
[2021-03-22T17:18:50.487] [DEBUG] members - getMembersList
[2021-03-22T17:18:50.487] [DEBUG] validator - Email validation complete!
[2021-03-23T14:09:47.672] [INFO] app - Example app listening on port 3000!
[2021-03-23T14:10:51.159] [DEBUG] members - getMembersList
[2021-03-23T14:10:51.167] [DEBUG] validator - Email validation complete!
[2021-03-23T14:11:56.064] [DEBUG] members - getMembersList
[2021-03-23T14:11:56.067] [DEBUG] validator - Email validation complete!
[2021-03-23T14:12:25.350] [DEBUG] members - getMembersList
[2021-03-23T14:12:25.352] [DEBUG] validator - Email validation complete!
[2021-03-23T14:15:31.851] [DEBUG] members - getMembersList
[2021-03-23T14:15:31.851] [DEBUG] validator - Email validation complete!
[2021-03-23T14:18:46.276] [DEBUG] members - getMembersList
[2021-03-23T14:18:46.277] [DEBUG] validator - Email validation complete!
